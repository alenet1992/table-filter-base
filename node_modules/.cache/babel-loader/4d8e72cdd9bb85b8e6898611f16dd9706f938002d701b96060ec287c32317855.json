{"ast":null,"code":"import{useState,useMemo}from'react';import{needsNoValue}from'../utils/filterUtils';/**\n * Define type of filters\n */export const filterOperators={equals:(value,filterValue)=>value===filterValue,greater_than:(value,filterValue)=>parseFloat(value)>parseFloat(filterValue),less_than:(value,filterValue)=>parseFloat(value)<parseFloat(filterValue),any:value=>value!==undefined&&value!==null&&value!=='',none:value=>value===undefined||value===null||value==='',in:(value,filterValues)=>filterValues.includes(value),contains:(value,filterValue)=>value&&value.toString().toLowerCase().includes(filterValue.toLowerCase())};export const useProductFilter=products=>{const[filter,setFilter]=useState(null);// UseMemo to cache the calc (re-render)\nconst filteredProducts=useMemo(()=>{if(!filter){return products;}return products.filter(product=>{const propertyValue=product.property_values.find(pv=>pv.property_id===filter.propertyId);const value=propertyValue?propertyValue.value:null;const filterFunction=filterOperators[filter.operator];if(!filterFunction)return false;if(filter.operator==='in'){return filterFunction(value,filter.value);}else if(needsNoValue(filter.operator)){return filterFunction(value);}else{return filterFunction(value,filter.value);}});},[products,filter]);const clearFilter=()=>{setFilter(null);};return{filteredProducts,filter,setFilter,clearFilter};};","map":{"version":3,"names":["useState","useMemo","needsNoValue","filterOperators","equals","value","filterValue","greater_than","parseFloat","less_than","any","undefined","none","in","filterValues","includes","contains","toString","toLowerCase","useProductFilter","products","filter","setFilter","filteredProducts","product","propertyValue","property_values","find","pv","property_id","propertyId","filterFunction","operator","clearFilter"],"sources":["/Users/alexandrepereira/Desktop/salsify/salsify-base/src/hooks/useProductFilter.ts"],"sourcesContent":["import { useState, useMemo } from 'react';\nimport { Product, Filter, FilterOperators } from '../types';\nimport { needsNoValue } from '../utils/filterUtils';\n\ninterface UseProductFilterReturn {\n  filteredProducts: Product[];\n  filter: Filter | null;\n  setFilter: (filter: Filter | null) => void;\n  clearFilter: () => void;\n}\n\n/**\n * Define type of filters\n */\nexport const filterOperators: FilterOperators = {\n  equals: (value: any, filterValue: any): boolean => value === filterValue,\n  greater_than: (value: any, filterValue: any): boolean => parseFloat(value) > parseFloat(filterValue),\n  less_than: (value: any, filterValue: any): boolean => parseFloat(value) < parseFloat(filterValue),\n  any: (value: any): boolean => value !== undefined && value !== null && value !== '',\n  none: (value: any): boolean => value === undefined || value === null || value === '',\n  in: (value: any, filterValues: any[]): boolean => filterValues.includes(value),\n  contains: (value: any, filterValue: string): boolean => \n    value && value.toString().toLowerCase().includes(filterValue.toLowerCase())\n};\n\nexport const useProductFilter = (products: Product[]): UseProductFilterReturn => {\n  const [filter, setFilter] = useState<Filter | null>(null);\n\n  // UseMemo to cache the calc (re-render)\n  const filteredProducts = useMemo(() => {\n    if (!filter) {\n      return products;\n    }\n    \n    return products.filter(product => {\n      const propertyValue = product.property_values.find(\n        pv => pv.property_id === filter.propertyId\n      );\n      const value = propertyValue ? propertyValue.value : null;\n\n      const filterFunction = filterOperators[filter.operator];\n      if (!filterFunction) return false;\n\n      if (filter.operator === 'in') {\n        return filterFunction(value, filter.value as string[]);\n      } else if (needsNoValue(filter.operator)) {\n        return filterFunction(value);\n      } else {\n        return filterFunction(value, filter.value);\n      }\n    });\n  }, [products, filter]);\n\n  const clearFilter = (): void => {\n    setFilter(null);\n  };\n\n  return {\n    filteredProducts,\n    filter,\n    setFilter,\n    clearFilter\n  };\n};"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,OAAO,KAAQ,OAAO,CAEzC,OAASC,YAAY,KAAQ,sBAAsB,CASnD;AACA;AACA,GACA,MAAO,MAAM,CAAAC,eAAgC,CAAG,CAC9CC,MAAM,CAAEA,CAACC,KAAU,CAAEC,WAAgB,GAAcD,KAAK,GAAKC,WAAW,CACxEC,YAAY,CAAEA,CAACF,KAAU,CAAEC,WAAgB,GAAcE,UAAU,CAACH,KAAK,CAAC,CAAGG,UAAU,CAACF,WAAW,CAAC,CACpGG,SAAS,CAAEA,CAACJ,KAAU,CAAEC,WAAgB,GAAcE,UAAU,CAACH,KAAK,CAAC,CAAGG,UAAU,CAACF,WAAW,CAAC,CACjGI,GAAG,CAAGL,KAAU,EAAcA,KAAK,GAAKM,SAAS,EAAIN,KAAK,GAAK,IAAI,EAAIA,KAAK,GAAK,EAAE,CACnFO,IAAI,CAAGP,KAAU,EAAcA,KAAK,GAAKM,SAAS,EAAIN,KAAK,GAAK,IAAI,EAAIA,KAAK,GAAK,EAAE,CACpFQ,EAAE,CAAEA,CAACR,KAAU,CAAES,YAAmB,GAAcA,YAAY,CAACC,QAAQ,CAACV,KAAK,CAAC,CAC9EW,QAAQ,CAAEA,CAACX,KAAU,CAAEC,WAAmB,GACxCD,KAAK,EAAIA,KAAK,CAACY,QAAQ,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACH,QAAQ,CAACT,WAAW,CAACY,WAAW,CAAC,CAAC,CAC9E,CAAC,CAED,MAAO,MAAM,CAAAC,gBAAgB,CAAIC,QAAmB,EAA6B,CAC/E,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGtB,QAAQ,CAAgB,IAAI,CAAC,CAEzD;AACA,KAAM,CAAAuB,gBAAgB,CAAGtB,OAAO,CAAC,IAAM,CACrC,GAAI,CAACoB,MAAM,CAAE,CACX,MAAO,CAAAD,QAAQ,CACjB,CAEA,MAAO,CAAAA,QAAQ,CAACC,MAAM,CAACG,OAAO,EAAI,CAChC,KAAM,CAAAC,aAAa,CAAGD,OAAO,CAACE,eAAe,CAACC,IAAI,CAChDC,EAAE,EAAIA,EAAE,CAACC,WAAW,GAAKR,MAAM,CAACS,UAClC,CAAC,CACD,KAAM,CAAAzB,KAAK,CAAGoB,aAAa,CAAGA,aAAa,CAACpB,KAAK,CAAG,IAAI,CAExD,KAAM,CAAA0B,cAAc,CAAG5B,eAAe,CAACkB,MAAM,CAACW,QAAQ,CAAC,CACvD,GAAI,CAACD,cAAc,CAAE,MAAO,MAAK,CAEjC,GAAIV,MAAM,CAACW,QAAQ,GAAK,IAAI,CAAE,CAC5B,MAAO,CAAAD,cAAc,CAAC1B,KAAK,CAAEgB,MAAM,CAAChB,KAAiB,CAAC,CACxD,CAAC,IAAM,IAAIH,YAAY,CAACmB,MAAM,CAACW,QAAQ,CAAC,CAAE,CACxC,MAAO,CAAAD,cAAc,CAAC1B,KAAK,CAAC,CAC9B,CAAC,IAAM,CACL,MAAO,CAAA0B,cAAc,CAAC1B,KAAK,CAAEgB,MAAM,CAAChB,KAAK,CAAC,CAC5C,CACF,CAAC,CAAC,CACJ,CAAC,CAAE,CAACe,QAAQ,CAAEC,MAAM,CAAC,CAAC,CAEtB,KAAM,CAAAY,WAAW,CAAGA,CAAA,GAAY,CAC9BX,SAAS,CAAC,IAAI,CAAC,CACjB,CAAC,CAED,MAAO,CACLC,gBAAgB,CAChBF,MAAM,CACNC,SAAS,CACTW,WACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}