{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";/**\n * Validate the filter value based on the operator and property type.\n */const operatorMap={string:['equals','any','none','in','contains'],number:['equals','greater_than','less_than','any','none','in'],enumerated:['equals','any','none','in']};const IN='in';const FilterEditor=_ref=>{let{properties,operators,onFilterChange,currentFilter,onClearFilter}=_ref;const[selectedProperty,setSelectedProperty]=useState('');const[selectedOperator,setSelectedOperator]=useState('');const[filterValue,setFilterValue]=useState('');const selectedPropertyObj=properties.find(p=>p.id.toString()===selectedProperty);const validOperators=selectedPropertyObj?operatorMap[selectedPropertyObj.type]:[];const availableOperators=operators.filter(op=>validOperators.includes(op.id));const needsValue=!['any','none'].includes(selectedOperator);const isMultipleOperator=selectedOperator===IN;const handleApplyFilter=()=>{if(!selectedProperty||!selectedOperator||needsValue&&!filterValue.trim()){return;}const value=needsValue?isMultipleOperator?filterValue.split(',').map(v=>v.trim()).filter(Boolean):filterValue.trim():null;onFilterChange({propertyId:parseInt(selectedProperty),operator:selectedOperator,value});};const handleClear=()=>{setSelectedProperty('');setSelectedOperator('');setFilterValue('');onClearFilter();};const renderValueInput=()=>{if(!needsValue){return null;}if((selectedPropertyObj===null||selectedPropertyObj===void 0?void 0:selectedPropertyObj.type)==='enumerated'){var _selectedPropertyObj$;return/*#__PURE__*/_jsxs(\"select\",{value:filterValue,onChange:e=>setFilterValue(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select value\"}),(_selectedPropertyObj$=selectedPropertyObj.values)===null||_selectedPropertyObj$===void 0?void 0:_selectedPropertyObj$.map(enumValue=>/*#__PURE__*/_jsx(\"option\",{value:enumValue,children:enumValue},enumValue))]});}return/*#__PURE__*/_jsx(\"input\",{type:(selectedPropertyObj===null||selectedPropertyObj===void 0?void 0:selectedPropertyObj.type)==='number'?'number':'text',value:filterValue,onChange:e=>setFilterValue(e.target.value),placeholder:isMultipleOperator?\"Enter values separated by commas\":\"Enter value\"});};return/*#__PURE__*/_jsx(\"div\",{className:\"filter-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"filter-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Property\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedProperty,onChange:e=>{setSelectedProperty(e.target.value);setSelectedOperator('');setFilterValue('');},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a property\"}),properties.map(property=>/*#__PURE__*/_jsx(\"option\",{value:property.id,children:property.name},property.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Operator\"}),/*#__PURE__*/_jsxs(\"select\",{value:selectedOperator,onChange:e=>{setSelectedOperator(e.target.value);setFilterValue('');},disabled:!selectedProperty,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select an operator\"}),availableOperators.map(operator=>/*#__PURE__*/_jsx(\"option\",{value:operator.id,children:operator.text},operator.id))]})]}),needsValue&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Value\",isMultipleOperator?'s':'']}),renderValueInput()]}),/*#__PURE__*/_jsx(\"button\",{className:\"button button-primary\",onClick:handleApplyFilter,disabled:!selectedProperty||!selectedOperator||needsValue&&!filterValue.trim(),children:\"Apply Filter\"}),currentFilter&&/*#__PURE__*/_jsx(\"button\",{className:\"button button-secondary\",onClick:handleClear,children:\"Clear Filter\"})]})});};export default FilterEditor;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","operatorMap","string","number","enumerated","IN","FilterEditor","_ref","properties","operators","onFilterChange","currentFilter","onClearFilter","selectedProperty","setSelectedProperty","selectedOperator","setSelectedOperator","filterValue","setFilterValue","selectedPropertyObj","find","p","id","toString","validOperators","type","availableOperators","filter","op","includes","needsValue","isMultipleOperator","handleApplyFilter","trim","value","split","map","v","Boolean","propertyId","parseInt","operator","handleClear","renderValueInput","_selectedPropertyObj$","onChange","e","target","children","values","enumValue","placeholder","className","property","name","disabled","text","onClick"],"sources":["/Users/alexandrepereira/Desktop/salsify/salsify-base/src/components/FilterEditor.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Property, Operator, Filter, PropertyType, OperatorType } from '../types';\n\ninterface FilterEditorProps {\n  properties: Property[];\n  operators: Operator[];\n  onFilterChange: (filter: Filter) => void;\n  currentFilter: Filter | null;\n  onClearFilter: () => void;\n}\n\n/**\n * Validate the filter value based on the operator and property type.\n */\nconst operatorMap: Record<PropertyType, OperatorType[]> = {\n  string: ['equals', 'any', 'none', 'in', 'contains'],\n  number: ['equals', 'greater_than', 'less_than', 'any', 'none', 'in'],\n  enumerated: ['equals', 'any', 'none', 'in']\n};\n\nconst IN = 'in';\n\nconst FilterEditor: React.FC<FilterEditorProps> = ({\n  properties,\n  operators,\n  onFilterChange,\n  currentFilter,\n  onClearFilter\n}) => {\n  const [selectedProperty, setSelectedProperty] = useState<string>('');\n  const [selectedOperator, setSelectedOperator] = useState<string>('');\n  const [filterValue, setFilterValue] = useState<string>('');\n\n  const selectedPropertyObj = properties.find(p => p.id.toString() === selectedProperty);\n  const validOperators = selectedPropertyObj ? operatorMap[selectedPropertyObj.type]: [];\n  const availableOperators = operators.filter(op => validOperators.includes(op.id as any));\n\n  const needsValue = !['any', 'none'].includes(selectedOperator);\n  const isMultipleOperator = selectedOperator === IN;\n\n  const handleApplyFilter = (): void => {\n    if ((!selectedProperty || !selectedOperator) ||  (needsValue && !filterValue.trim())) {\n       return;\n    }\n    \n    const value = needsValue ? \n      (isMultipleOperator ? filterValue.split(',').map(v => v.trim()).filter(Boolean) : filterValue.trim()) \n      : null;\n\n    onFilterChange({\n      propertyId: parseInt(selectedProperty),\n      operator: selectedOperator,\n      value\n    });\n  };\n\n  const handleClear = (): void => {\n    setSelectedProperty('');\n    setSelectedOperator('');\n    setFilterValue('');\n    onClearFilter();\n  };\n\n  const renderValueInput = (): JSX.Element | null => {\n    if (!needsValue) { \n      return null; \n    }\n\n    if (selectedPropertyObj?.type === 'enumerated') {\n      return (\n        <select value={filterValue} onChange={(e) => setFilterValue(e.target.value)}>\n          <option value=\"\">Select value</option>\n          {selectedPropertyObj.values?.map(enumValue => (\n            <option key={enumValue} value={enumValue}>{enumValue}</option>\n          ))}\n        </select>\n      );\n    }\n\n    return (\n      <input\n        type={selectedPropertyObj?.type === 'number' ? 'number' : 'text'}\n        value={filterValue}\n        onChange={(e) => setFilterValue(e.target.value)}\n        placeholder={isMultipleOperator ? \"Enter values separated by commas\" : \"Enter value\"}\n      />\n    );\n  };\n\n  return (\n    <div className=\"filter-section\">\n      <div className=\"filter-form\">\n        <div className=\"form-group\">\n          <label>Property</label>\n          <select\n            value={selectedProperty}\n            onChange={(e) => {\n              setSelectedProperty(e.target.value);\n              setSelectedOperator('');\n              setFilterValue('');\n            }}\n          >\n            <option value=\"\">Select a property</option>\n            {properties.map(property => (\n              <option key={property.id} value={property.id}>\n                {property.name}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Operator</label>\n          <select\n            value={selectedOperator}\n            onChange={(e) => {\n              setSelectedOperator(e.target.value);\n              setFilterValue('');\n            }}\n            disabled={!selectedProperty}\n          >\n            <option value=\"\">Select an operator</option>\n            {availableOperators.map(operator => (\n              <option key={operator.id} value={operator.id}>\n                {operator.text}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {needsValue && (\n          <div className=\"form-group\">\n            <label>Value{isMultipleOperator ? 's' : ''}</label>\n            {renderValueInput()}\n          </div>\n        )}\n\n        <button\n          className=\"button button-primary\"\n          onClick={handleApplyFilter}\n          disabled={!selectedProperty || !selectedOperator || (needsValue && !filterValue.trim())}\n        >\n          Apply Filter\n        </button>\n\n        {currentFilter && (\n          <button className=\"button button-secondary\" onClick={handleClear}>\n            Clear Filter\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FilterEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}