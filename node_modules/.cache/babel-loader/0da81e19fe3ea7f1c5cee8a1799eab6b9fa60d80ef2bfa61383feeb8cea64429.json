{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useMemo } from 'react';\nimport { needsNoValue } from '../utils/filterUtils';\n/**\n * Define type of filters\n */\nexport const filterOperators = {\n  equals: (value, filterValue) => value === filterValue,\n  greater_than: (value, filterValue) => parseFloat(value) > parseFloat(filterValue),\n  less_than: (value, filterValue) => parseFloat(value) < parseFloat(filterValue),\n  any: value => value !== undefined && value !== null && value !== '',\n  none: value => value === undefined || value === null || value === '',\n  in: (value, filterValues) => filterValues.includes(value),\n  contains: (value, filterValue) => value && value.toString().toLowerCase().includes(filterValue.toLowerCase())\n};\nexport const useProductFilter = products => {\n  _s();\n  const [filter, setFilter] = useState(null);\n\n  // UseMemo to cache the calc (re-render)\n  const filteredProducts = useMemo(() => {\n    if (!filter) {\n      return products;\n    }\n    return products.filter(product => {\n      const propertyValue = product.property_values.find(pv => pv.property_id === filter.propertyId);\n      const value = propertyValue ? propertyValue.value : null;\n      const filterFunction = filterOperators[filter.operator];\n      if (!filterFunction) return false;\n      if (filter.operator === 'in') {\n        return filterFunction(value, filter.value);\n      } else if (needsNoValue(filter.operator)) {\n        return filterFunction(value);\n      } else {\n        return filterFunction(value, filter.value);\n      }\n    });\n  }, [products, filter]);\n  const clearFilter = () => {\n    setFilter(null);\n  };\n  return {\n    filteredProducts,\n    filter,\n    setFilter,\n    clearFilter\n  };\n};\n_s(useProductFilter, \"sYVDjzbYki2zCl+/NnQE0COhmEI=\");","map":{"version":3,"names":["useState","useMemo","needsNoValue","filterOperators","equals","value","filterValue","greater_than","parseFloat","less_than","any","undefined","none","in","filterValues","includes","contains","toString","toLowerCase","useProductFilter","products","_s","filter","setFilter","filteredProducts","product","propertyValue","property_values","find","pv","property_id","propertyId","filterFunction","operator","clearFilter"],"sources":["/Users/alexandrepereira/Desktop/salsify/salsify-base/src/hooks/useProductFilter.ts"],"sourcesContent":["import { useState, useMemo } from 'react';\nimport { Product, Filter, FilterOperators } from '../types';\nimport { needsNoValue } from '../utils/filterUtils';\n\ninterface UseProductFilterReturn {\n  filteredProducts: Product[];\n  filter: Filter | null;\n  setFilter: (filter: Filter | null) => void;\n  clearFilter: () => void;\n}\n\n/**\n * Define type of filters\n */\nexport const filterOperators: FilterOperators = {\n  equals: (value: any, filterValue: any): boolean => value === filterValue,\n  greater_than: (value: any, filterValue: any): boolean => parseFloat(value) > parseFloat(filterValue),\n  less_than: (value: any, filterValue: any): boolean => parseFloat(value) < parseFloat(filterValue),\n  any: (value: any): boolean => value !== undefined && value !== null && value !== '',\n  none: (value: any): boolean => value === undefined || value === null || value === '',\n  in: (value: any, filterValues: any[]): boolean => filterValues.includes(value),\n  contains: (value: any, filterValue: string): boolean => \n    value && value.toString().toLowerCase().includes(filterValue.toLowerCase())\n};\n\nexport const useProductFilter = (products: Product[]): UseProductFilterReturn => {\n  const [filter, setFilter] = useState<Filter | null>(null);\n\n  // UseMemo to cache the calc (re-render)\n  const filteredProducts = useMemo(() => {\n    if (!filter) {\n      return products;\n    }\n    \n    return products.filter(product => {\n      const propertyValue = product.property_values.find(\n        pv => pv.property_id === filter.propertyId\n      );\n      const value = propertyValue ? propertyValue.value : null;\n\n      const filterFunction = filterOperators[filter.operator];\n      if (!filterFunction) return false;\n\n      if (filter.operator === 'in') {\n        return filterFunction(value, filter.value as string[]);\n      } else if (needsNoValue(filter.operator)) {\n        return filterFunction(value);\n      } else {\n        return filterFunction(value, filter.value);\n      }\n    });\n  }, [products, filter]);\n\n  const clearFilter = (): void => {\n    setFilter(null);\n  };\n\n  return {\n    filteredProducts,\n    filter,\n    setFilter,\n    clearFilter\n  };\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAEzC,SAASC,YAAY,QAAQ,sBAAsB;AASnD;AACA;AACA;AACA,OAAO,MAAMC,eAAgC,GAAG;EAC9CC,MAAM,EAAEA,CAACC,KAAU,EAAEC,WAAgB,KAAcD,KAAK,KAAKC,WAAW;EACxEC,YAAY,EAAEA,CAACF,KAAU,EAAEC,WAAgB,KAAcE,UAAU,CAACH,KAAK,CAAC,GAAGG,UAAU,CAACF,WAAW,CAAC;EACpGG,SAAS,EAAEA,CAACJ,KAAU,EAAEC,WAAgB,KAAcE,UAAU,CAACH,KAAK,CAAC,GAAGG,UAAU,CAACF,WAAW,CAAC;EACjGI,GAAG,EAAGL,KAAU,IAAcA,KAAK,KAAKM,SAAS,IAAIN,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,EAAE;EACnFO,IAAI,EAAGP,KAAU,IAAcA,KAAK,KAAKM,SAAS,IAAIN,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,EAAE;EACpFQ,EAAE,EAAEA,CAACR,KAAU,EAAES,YAAmB,KAAcA,YAAY,CAACC,QAAQ,CAACV,KAAK,CAAC;EAC9EW,QAAQ,EAAEA,CAACX,KAAU,EAAEC,WAAmB,KACxCD,KAAK,IAAIA,KAAK,CAACY,QAAQ,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACH,QAAQ,CAACT,WAAW,CAACY,WAAW,CAAC,CAAC;AAC9E,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAIC,QAAmB,IAA6B;EAAAC,EAAA;EAC/E,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAAgB,IAAI,CAAC;;EAEzD;EACA,MAAMwB,gBAAgB,GAAGvB,OAAO,CAAC,MAAM;IACrC,IAAI,CAACqB,MAAM,EAAE;MACX,OAAOF,QAAQ;IACjB;IAEA,OAAOA,QAAQ,CAACE,MAAM,CAACG,OAAO,IAAI;MAChC,MAAMC,aAAa,GAAGD,OAAO,CAACE,eAAe,CAACC,IAAI,CAChDC,EAAE,IAAIA,EAAE,CAACC,WAAW,KAAKR,MAAM,CAACS,UAClC,CAAC;MACD,MAAM1B,KAAK,GAAGqB,aAAa,GAAGA,aAAa,CAACrB,KAAK,GAAG,IAAI;MAExD,MAAM2B,cAAc,GAAG7B,eAAe,CAACmB,MAAM,CAACW,QAAQ,CAAC;MACvD,IAAI,CAACD,cAAc,EAAE,OAAO,KAAK;MAEjC,IAAIV,MAAM,CAACW,QAAQ,KAAK,IAAI,EAAE;QAC5B,OAAOD,cAAc,CAAC3B,KAAK,EAAEiB,MAAM,CAACjB,KAAiB,CAAC;MACxD,CAAC,MAAM,IAAIH,YAAY,CAACoB,MAAM,CAACW,QAAQ,CAAC,EAAE;QACxC,OAAOD,cAAc,CAAC3B,KAAK,CAAC;MAC9B,CAAC,MAAM;QACL,OAAO2B,cAAc,CAAC3B,KAAK,EAAEiB,MAAM,CAACjB,KAAK,CAAC;MAC5C;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACe,QAAQ,EAAEE,MAAM,CAAC,CAAC;EAEtB,MAAMY,WAAW,GAAGA,CAAA,KAAY;IAC9BX,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,OAAO;IACLC,gBAAgB;IAChBF,MAAM;IACNC,SAAS;IACTW;EACF,CAAC;AACH,CAAC;AAACb,EAAA,CAtCWF,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}